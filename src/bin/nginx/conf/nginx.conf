worker_processes  1;

error_log  /home/Workspace/MELS/data/log/nginx_error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

pid        logs/nginx.pid;


events {
    worker_connections  1024;
    use epoll;
}


http {
    # Enumerate all the Tornado servers here
    upstream backends {
	server 127.0.0.1:9000;
	server 127.0.0.1:9001;
	server 127.0.0.1:9002;
	server 127.0.0.1:9003;
	server 127.0.0.1:9004;
	server 127.0.0.1:9005;
	}
    
    server_tokens off;
    include       mime.types;
    default_type  application/octet-stream;

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

    sendfile        on;
    tcp_nopush     on;
    tcp_nodelay on;

    ## Start: Size Limits & Buffer Overflows ##
    client_body_buffer_size  1K;
    client_header_buffer_size 1k;
    client_max_body_size 1k;
    large_client_header_buffers 2 1k;
    ## END: Size Limits & Buffer Overflows ##
    
    ## Start: Timeouts ##
    client_body_timeout   10;
    client_header_timeout 10;
    keepalive_timeout     5 5;
    send_timeout          10;
    ## End: Timeouts ##   

    gzip  on;
    gzip_min_length 1000;
    gzip_proxied any;              
    gzip_types text/plain text/css text/xml
               application/x-javascript application/xml
               application/atom+xml text/javascript;
    
    proxy_next_upstream error;

    server {
        listen       80;
    

        location /files/ {
        error_page  400 403 404 500 502 503 = @error;
        root /home/Workspace/MELS/data;
            if ($query_string) {
                expires max;
            }
        }
            
    location @error {
            proxy_pass http://backends;
        }   

        location / {
        proxy_pass_header Server;
            proxy_set_header Host $http_host;
            proxy_redirect off;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Scheme $scheme;
            proxy_pass http://backends;

        }
    }
}